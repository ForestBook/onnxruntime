jobs:
- job: MacOS_CI_Dev
  pool:
    vmImage: 'macOS-10.13'
  steps:
    - template: templates/set-test-data-variables-step.yml
    - task: CmdLine@2
      displayName: 'Download azcopy'
      inputs:
        script: |
          curl -so azcopy.tar.gz -L 'https://aka.ms/downloadazcopy-v10-mac'
          tar -zxvf azcopy.tar.gz --strip 1
        workingDirectory: $(Build.BinariesDirectory)
    - task: PythonScript@0
      displayName: 'Download test data'
      inputs:
        scriptPath: '$(Build.SourcesDirectory)/tools/ci_build/github/download_test_data.py'
        arguments: --test_data_url $(TestDataUrl) --azure_region centralus
        pythonInterpreter: '/usr/local/bin/python3'
        workingDirectory: $(Build.BinariesDirectory)
    - script: |
        sudo python3 -m pip install numpy==1.15.0
        sudo xcode-select --switch /Applications/Xcode_10.app/Contents/Developer
        python3 $(Build.SourcesDirectory)/tools/ci_build/build.py --use_openmp --build_dir $(Build.BinariesDirectory) --build_wheel --skip_submodule_sync --parallel --build_shared_lib --enable_onnx_tests --config Debug Release
      displayName: 'Build and Test OnnxRuntime lib for MacOS'

    - script: |
       set -e -x 
       find $(Build.BinariesDirectory)
       mkdir $(Build.BinariesDirectory)/osx-x64
       cp $(Build.BinariesDirectory)/RelWithDebInfo/libonnxruntime.dylib $(Build.BinariesDirectory)/osx-x64/
       ls -al $(Build.BinariesDirectory)/osx-x64
       dsymutil $(Build.BinariesDirectory)/osx-x64/libonnxruntime.dylib -o $(Build.BinariesDirectory)/osx-x64/libonnxruntime.dylib.dSYM
       strip -S -x $(Build.BinariesDirectory)/osx-x64/libonnxruntime.dylib
       ls -al $(Build.BinariesDirectory)/osx-x64
       oldDir=`pwd`
       cd $(Build.BinariesDirectory)
       zip -r osx-x64.zip osx-x64
       cp $(Build.BinariesDirectory)/osx-x64.zip $(Build.ArtifactStagingDirectory)       
       cd $oldDir
      displayName: 'Copy MacOS libs to Artifact Staging'

    - task: PublishPipelineArtifact@0
      displayName: 'Publish Pipeline Artifact'
      inputs:
        artifactName: 'drop-osx'
        targetPath: '$(Build.ArtifactStagingDirectory)'

    - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
      displayName: 'Component Detection'
      condition: succeeded()

    - template: templates/clean-agent-build-directory-step.yml
