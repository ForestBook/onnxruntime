jobs:
- job: NuGet Packaging
  pool: Win-CPU
  pool:
    name: AI-Win-CPU
  steps:
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - Win-x86'
    inputs:
      artifactName: 'drop-win-x86-zip'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'
    continueOnError: true

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - Linux'
    inputs:
      artifactName: 'drop-linux'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'
    continueOnError: true

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - MacOS'
    inputs:
      artifactName: 'drop-osx'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'
    continueOnError: true

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - NuGet'
    inputs:
      artifactName: 'drop-nuget'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'
    continueOnError: true

  - script: |
     pushd $(Build.BinariesDirectory)\nuget-artifact
     dir
     powershell -Command "Invoke-WebRequest http://stahlworks.com/dev/unzip.exe -OutFile unzip.exe"
     powershell -Command "Invoke-WebRequest http://stahlworks.com/dev/zip.exe -OutFile zip.exe"
     set PATH=%CD%;%PATH%
     FOR /R %%i IN (*.nupkg) do ( 
         rename %%~ni.nupkg %%~ni.zip
         unzip %%~ni.zip -d %%~ni
         del /Q %%~ni.zip
         unzip win-x86.zip -d win-x86
         unzip linux-x64.zip -d linux-x64
         unzip linux-x86.zip -d linux-x86
         mkdir %%~ni\runtimes\win-x86
         mkdir %%~ni\runtimes\linux-x64
         mkdir %%~ni\runtimes\linux-x86
         mkdir %%~ni\runtimes\win-x86\native
         mkdir %%~ni\runtimes\linux-x64\native
         mkdir %%~ni\runtimes\linux-x86\native
         move win-x86\runtimes\win-x86\native\onnxruntime.dll %%~ni\runtimes\win-x86\native\onnxruntime.dll
         move win-x86\runtimes\win-x86\native\onnxruntime.lib %%~ni\runtimes\win-x86\native\onnxruntime.lib
         move win-x86\runtimes\win-x86\native\onnxruntime.pdb %%~ni\runtimes\win-x86\native\onnxruntime.pdb
         move linux-x64\linux-x64\libonnxruntime.so %%~ni\runtimes\linux-x64\native\libonnxruntime.so
         move linux-x86\linux-x86\libonnxruntime.so %%~ni\runtimes\linux-x86\native\libonnxruntime.so   
         unzip osx-x64.zip -d osx-x64
         dir osx-x64 /s
         mkdir %%~ni\runtimes\osx-x64
         mkdir %%~ni\runtimes\osx-x64\native
         move osx-x64\osx-x64\libonnxruntime.dylib %%~ni\runtimes\osx-x64\native\libonnxruntime.dylib
         move osx-x64\osx-x64\libonnxruntime.dylib.dSYM %%~ni\runtimes\osx-x64\native\libonnxruntime.dylib.dSYM
         pushd %%~ni
         zip -r ..\%%~ni.zip .
         popd
         move %%~ni.zip %%~ni.nupkg
     ) 
     popd
     copy $(Build.BinariesDirectory)/nuget-artifact/*.nupkg $(Build.ArtifactStagingDirectory)
    displayName: 'Bundle NuGet and other binaries'

  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline NuGet Artifact'
    inputs:
      artifactName: 'drop-signed-nuget'
      targetPath: '$(Build.ArtifactStagingDirectory)'



