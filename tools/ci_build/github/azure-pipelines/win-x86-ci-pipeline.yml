jobs:
- job: Windows_CI_Dev_x86
  pool: Win-CPU
  variables:
    buildDirectory: '$(Build.BinariesDirectory)'
    PlatformTarget: x86
  steps:
    - template: templates/set-test-data-variables-step.yml
    - template: templates/windows-build-tools-setup-steps.yml
      parameters:
        EnvSetupScript: 'setup_env.bat'
        buildArch: 'x86'
        setVcvars: false

    - task: VSBuild@1
      displayName: 'Build Release'
      inputs:
        solution: '$(Build.BinariesDirectory)\Release\onnxruntime.sln'
        platform: Win32
        msbuildArguments: '/m /p:PlatformTarget=x86'
        configuration: 'Release'
        msbuildArchitecture: 'x86'
        logProjectEvents: true
        workingFolder: '$(Build.BinariesDirectory)\Release'

    - task: BatchScript@1
      displayName: 'Test Release'
      inputs:
        filename: '$(Build.BinariesDirectory)\packages\python\python.exe'
        arguments: '$(Build.SourcesDirectory)\tools\ci_build\build.py --config Release --build_dir $(Build.BinariesDirectory) --skip_submodule_sync --cmake_path $(Build.BinariesDirectory)\cmake\bin\cmake.exe --ctest_path $(Build.BinariesDirectory)\cmake\bin\ctest.exe --use_openmp --build_shared_lib  --enable_onnx_tests --test_data_url $(TestDataUrl) --test_data_checksum $(TestDataChecksum) --test --x86'
        workingFolder: "$(Build.BinariesDirectory)"

    - task: VSBuild@1
      displayName: 'Build C# Release'
      inputs:
        solution: '$(Build.SourcesDirectory)\csharp\OnnxRuntime.CSharp.sln'
        platform: 'any cpu'
        configuration: 'Release'
        msbuildArchitecture: 'x86'
        restoreNugetPackages: false
        workingFolder: '$(Build.SourcesDirectory)\csharp'
        msbuildArgs: '/m /p:OnnxRuntimeBuildDirectory=$(Build.BinariesDirectory)'

    - task: VSTest@2
      displayName: 'VsTest - C# Release'
      inputs:
        testAssemblyVer2: '**\bin\Release\**\*Tests.dll'
        searchFolder: '$(Build.SourcesDirectory)\csharp\test'
        runInParallel: true
        configuration: Release

    - task: PublishTestResults@2
      displayName: 'Publish unit test results'
      inputs:
        testResultsFiles: '**\*.results.xml'
        searchFolder: '$(Build.BinariesDirectory)'
        testRunTitle: 'Unit Test Run'
      condition: succeededOrFailed()

    - script: |
       msbuild $(Build.SourcesDirectory)\csharp\OnnxRuntime.CSharp.proj /p:Configuration=$(buildConfig) /p:TargetArchitecture=x86 /t:CreatePackage
       cd $(Build.SourcesDirectory)\csharp\src\Microsoft.ML.OnnxRuntime\bin\$(buildConfig)\
       rename *.nupkg win-x86.zip
       copy $(Build.SourcesDirectory)/csharp/src/Microsoft.ML.OnnxRuntime/bin/Release/*.zip $(Build.ArtifactStagingDirectory)       
      workingDirectory: '$(Build.SourcesDirectory)\csharp'
      displayName: 'Create NuGet Package'
      env:
        RuntimeIdentifier: win-x86

    - task: PublishPipelineArtifact@0
      displayName: 'Publish Pipeline Artifact: drop win x86 zip'
      inputs:
        artifactName: 'drop-win-x86-zip'
        targetPath: '$(Build.ArtifactStagingDirectory)'

    - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
      displayName: 'Component Detection'
      condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))

    - template: templates/clean-agent-build-directory-step.yml
