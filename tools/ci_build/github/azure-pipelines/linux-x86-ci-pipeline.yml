jobs:
- job: Linux_CI_Dev_x86
  pool: $${{ coalesce( variables['AgentPool'], 'Linux-CPU') }}
  variables:
    DoNugetPack: ${{ coalesce ( variables['DoNugetPack'], 'false') }}
    BuildCommand: ${{ coalesce ( variables['_BuildCommand_Linux_x86'], 'tools/ci_build/github/linux/run_dockerbuild.sh -o ubuntu16.04 -d cpu -r $(Build.BinariesDirectory) -a x86 -x "--x86"') }}
  steps:
    - template: templates/linux-set-variables-and-download.yml

    - script: ${{ parameters.BuildCommand }}
      displayName: 'Command Line Script'

    - ${{ if eq(parameters['DoNugetPack'], 'true') }}:
      - script: |
         set -e -x
         mkdir $(Build.BinariesDirectory)/linux-x86
         cp $(Build.BinariesDirectory)/Release/libonnxruntime.so $(Build.BinariesDirectory)/linux-x86
         cd $(Build.BinariesDirectory)
         zip -r linux-x86.zip linux-x86
         cp $(Build.BinariesDirectory)/*.zip $(Build.ArtifactStagingDirectory)
         ls -al $(Build.ArtifactStagingDirectory)
        displayName: 'Create Artifacts'

      - task: PublishPipelineArtifact@0
        displayName: 'Publish Pipeline Artifact'
        inputs:
          artifactName: 'drop-linux-x86'
          targetPath: '$(Build.ArtifactStagingDirectory)'

    - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
      displayName: 'Component Detection'
      condition: succeeded()

    - template: templates/clean-agent-build-directory-step.yml
